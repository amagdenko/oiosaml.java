<?xml version="1.0"?>
<project name="OIOSAML-authz" default="compile" basedir=".">

	<property name="system" value="oiosaml-authz" />

	
	<exec executable="svn" output="svninfo.xml">
		<arg line="info --xml" />
	</exec>
	<xmlproperty file="svninfo.xml" collapseattributes="true" />
	<property name="version" value="${info.entry.revision}" />

	<property name="target.dir" value="target" />
	<property name="dist.dir" value="target/dist" />
	<property name="build.dir" value="target/build" />
	<property name="export.dir" value="target/export" />
	<property name="test.build.dir" value="target/test" />
	<property name="src.dir" value="src" />
	<property name="test.src.dir" value="test" />
	<property name="test.reports" value="target/reports" />
	<property name="lib.dir" value="lib" />
	<property name="javadocs.dir" value="target/docs" />
	<property name="docs.dir" value="docs" />
	<property name="web.dir" value="webapp" />
	<property name="web-inf.dir" value="${web.dir}/WEB-INF" />
	<property name="jarname" value="${system}-${version}.jar" />

	<path id="classpath">
		<fileset dir="lib/">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.dir}" />
	</path>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${javadocs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${test.build.dir}" />
		<mkdir dir="${test.reports}" />
		<mkdir dir="${test.reports}/html" />
	</target>

	<target name="clean">
		<delete dir="${target.dir}" />
	</target>

	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" includes="**/*.java" destdir="${build.dir}" encoding="ISO-8859-1" debug="true" source="1.5" target="1.5" classpathref="classpath">
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
	</target>

	<target name="jar" depends="compile">
		<jar destfile="${dist.dir}/${jarname}" basedir="${build.dir}">
			<metainf dir="." includes="LICENSE.txt" />
		</jar>
	</target>

	<target name="zipdist" depends="jar, javadoc">
		<delete dir="${export.dir}"/>

		<exec executable="svn" output="svninfo.xml">
			<arg line="export . ${export.dir}" />
		</exec>
		
		<zip destfile="${dist.dir}/${system}-${version}.zip">
			<zipfileset dir="${lib.dir}" prefix="lib">
				<exclude name="servletapi-2.4.jar" />
				<exclude name="test/**" />
				<exclude name="endorsed/**" />
			</zipfileset>
			<zipfileset dir="${export.dir}" prefix="src" />
			<zipfileset dir="${javadocs.dir}" prefix="doc/javadoc" />
			<zipfileset dir="${docs.dir}" prefix="doc" />
			<zipfileset dir="${lib.dir}/endorsed" prefix="endorsed" />
			<fileset dir="${dist.dir}" includes="${jarname}" />
			<fileset dir="${dist.dir}" includes="${warname}" />
			<fileset dir="." includes="LICENSE.txt" />
		</zip>
		<delete dir="${export.dir}"/>

	</target>

	<target name="init-test">
		<tstamp />
		<mkdir dir="target/test" />
	</target>

	<target name="test" depends="init-test,compile-test,instrument">
		<junit forkmode="once" fork="true" failureproperty="test.failed">
			<classpath path="target/instrumented" />
			<classpath refid="classpath" />
			<classpath path="${test.build.dir}" />
			<formatter type="plain" />
			<formatter type="xml" />
			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
			<sysproperty key="javax.xml.transform.TransformerFactory" value="org.apache.xalan.processor.TransformerFactoryImpl" />
			<sysproperty key="javax.xml.validation.SchemaFactory" value="org.apache.xerces.jaxp.validation.XMLSchemaFactory" />
			<sysproperty key="java.endorsed.dirs" value="lib/endorsed" />
			<sysproperty key="net.sourceforge.cobertura.datafile" file="target/cobertura.ser" />
			<batchtest fork="yes" todir="${test.reports}">
				<fileset dir="${test.build.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${test.reports}/html">
			<fileset dir="${test.reports}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports}/html" />
		</junitreport>
		<fail if="test.failed" message="There were test failures" />
		<antcall target="coverage-report" />
	</target>


	<target name="compile-test" depends="init-test, compile">
		<javac destdir="${test.build.dir}" encoding="ISO-8859-1" debug="true" source="1.5" target="1.5" classpathref="classpath">
			<src path="${test.src.dir}" />
			<src path="integration" />
		</javac>
		<copy todir="${test.build.dir}">
			<fileset dir="${test.src.dir}" excludes="**/*.java" />
			<fileset dir="integration" excludes="**/*.java" />
		</copy>
	</target>

	<target name="instrument" depends="compile-test" unless="instrument.skip">
		<taskdef classpathref="classpath" resource="tasks.properties" />

		<delete file="target/cobertura.ser" />
		<delete dir="target/instrumented" />

		<cobertura-instrument todir="target/instrumented" datafile="target/cobertura.ser">
			<ignore regex="org.apache.log4j.*" />
			<fileset dir="${build.dir}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>


	<target name="coverage-report" unless="instrument.skip">
		<taskdef classpathref="classpath" resource="tasks.properties" />
		<cobertura-report format="html" destdir="target/coverage" datafile="target/cobertura.ser">
			<fileset dir="src">
				<include name="**/*.java" />
				<exclude name="**/*Stub.java" />
			</fileset>
		</cobertura-report>
		<cobertura-report format="xml" destdir="target/coverage" datafile="target/cobertura.ser">
			<fileset dir="src">
				<include name="**/*.java" />
				<exclude name="**/*Stub.java" />
			</fileset>
		</cobertura-report>
	</target>

	<target name="build-everything" depends="clean, init, compile, javadoc, test, war, zipdist" />

	<target name="javadoc" depends="compile">
		<javadoc packagenames="dk.*" sourcepath="${src.dir}" defaultexcludes="yes" destdir="${javadocs.dir}" author="true" version="true" use="true" windowtitle="OIOSAML Authz" classpathref="classpath" charset="UTF-8">
			<doctitle>
				<![CDATA[<h1>OIOSAML Authorization filter</h1>]]></doctitle>
		<bottom>
			<![CDATA[<i><p><small>
The contents of this file are subject to the Mozilla Public 
License Version 1.1 (the "License"); you may not use this 
file except in compliance with the License. You may obtain 
a copy of the License at http://www.mozilla.org/MPL/<br />
Software distributed under the License is distributed on an 
"AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express 
or implied. See the License for the specific language governing
rights and limitations under the License.<br />
The Original Code is OIOSAML.java Service Provider.<br />
The Initial Developer of the Original Code is <a href="http://trifork.com">Trifork A/S</a>. Portions 
created by <a href="http://trifork.com">Trifork A/S</a> are Copyright (C) 2008 <a href="http://itst.dk">Danish National IT 
and Telecom Agency (http://www.itst.dk)</a>. All Rights Reserved.
</small></p></i>]]></bottom>
	<tag name="todo" scope="all" description="To do:" />
</javadoc>
</target>
</project>
